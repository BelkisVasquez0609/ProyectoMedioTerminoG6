//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\Belkis Vasquez\source\repos\ProyectoMedioTerminoG6\ProyectoMedioTerminoG6\Proyecto.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public partial class ProyectoLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		HOST_LBL=1, BECOME_LBL=2, TASKS_LBL=3, NAME_LBL=4, MAYORQUE=5, GUION=6, 
		DIR=7, SEP=8, SP=9, PUNTO=10, NUM=11, TEXT=12, WORD=13, NEWLINE=14, BACKSLASH=15;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"HOST_LBL", "BECOME_LBL", "TASKS_LBL", "NAME_LBL", "MAYORQUE", "GUION", 
		"DIR", "SEP", "SP", "PUNTO", "NUM", "TEXT", "WORD", "NEWLINE", "BACKSLASH"
	};


	public ProyectoLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ProyectoLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'host'", "'become'", "'tasks'", "'name'", "'>'", null, null, null, 
		null, "'.'", null, null, null, null, "'\\'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "HOST_LBL", "BECOME_LBL", "TASKS_LBL", "NAME_LBL", "MAYORQUE", "GUION", 
		"DIR", "SEP", "SP", "PUNTO", "NUM", "TEXT", "WORD", "NEWLINE", "BACKSLASH"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Proyecto.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static ProyectoLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x11', '\x86', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x3', 
		'\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\a', '\x3', '\a', '\x5', '\a', '=', '\n', '\a', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x5', '\b', '\x42', '\n', '\b', '\x3', '\b', '\x5', '\b', 
		'\x45', '\n', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x5', '\b', 
		'J', '\n', '\b', '\x3', '\b', '\x5', '\b', 'M', '\n', '\b', '\x3', '\b', 
		'\x5', '\b', 'P', '\n', '\b', '\a', '\b', 'R', '\n', '\b', '\f', '\b', 
		'\xE', '\b', 'U', '\v', '\b', '\x3', '\t', '\x5', '\t', 'X', '\n', '\t', 
		'\x3', '\t', '\x3', '\t', '\x5', '\t', '\\', '\n', '\t', '\x3', '\n', 
		'\x6', '\n', '_', '\n', '\n', '\r', '\n', '\xE', '\n', '`', '\x3', '\v', 
		'\x3', '\v', '\x3', '\f', '\x6', '\f', '\x66', '\n', '\f', '\r', '\f', 
		'\xE', '\f', 'g', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', 
		'\a', '\r', 'n', '\n', '\r', '\f', '\r', '\xE', '\r', 'q', '\v', '\r', 
		'\x3', '\xE', '\x6', '\xE', 't', '\n', '\xE', '\r', '\xE', '\xE', '\xE', 
		'u', '\x3', '\xE', '\a', '\xE', 'y', '\n', '\xE', '\f', '\xE', '\xE', 
		'\xE', '|', '\v', '\xE', '\x3', '\xE', '\x5', '\xE', '\x7F', '\n', '\xE', 
		'\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', 
		'\x3', '\x10', '\x2', '\x2', '\x11', '\x3', '\x3', '\x5', '\x4', '\a', 
		'\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', '\n', 
		'\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', '\x1B', '\xF', 
		'\x1D', '\x10', '\x1F', '\x11', '\x3', '\x2', '\x5', '\x3', '\x2', '\x32', 
		';', '\x6', '\x2', ')', ')', '.', '.', '\x43', '\\', '\x63', '|', '\x4', 
		'\x2', '\v', '\f', '\xF', '\xF', '\x2', '\x94', '\x2', '\x3', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x19', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x1D', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '!', '\x3', '\x2', '\x2', '\x2', '\x5', '&', 
		'\x3', '\x2', '\x2', '\x2', '\a', '-', '\x3', '\x2', '\x2', '\x2', '\t', 
		'\x33', '\x3', '\x2', '\x2', '\x2', '\v', '\x38', '\x3', '\x2', '\x2', 
		'\x2', '\r', ':', '\x3', '\x2', '\x2', '\x2', '\xF', '>', '\x3', '\x2', 
		'\x2', '\x2', '\x11', 'W', '\x3', '\x2', '\x2', '\x2', '\x13', '^', '\x3', 
		'\x2', '\x2', '\x2', '\x15', '\x62', '\x3', '\x2', '\x2', '\x2', '\x17', 
		'\x65', '\x3', '\x2', '\x2', '\x2', '\x19', 'i', '\x3', '\x2', '\x2', 
		'\x2', '\x1B', 's', '\x3', '\x2', '\x2', '\x2', '\x1D', '\x80', '\x3', 
		'\x2', '\x2', '\x2', '\x1F', '\x84', '\x3', '\x2', '\x2', '\x2', '!', 
		'\"', '\a', 'j', '\x2', '\x2', '\"', '#', '\a', 'q', '\x2', '\x2', '#', 
		'$', '\a', 'u', '\x2', '\x2', '$', '%', '\a', 'v', '\x2', '\x2', '%', 
		'\x4', '\x3', '\x2', '\x2', '\x2', '&', '\'', '\a', '\x64', '\x2', '\x2', 
		'\'', '(', '\a', 'g', '\x2', '\x2', '(', ')', '\a', '\x65', '\x2', '\x2', 
		')', '*', '\a', 'q', '\x2', '\x2', '*', '+', '\a', 'o', '\x2', '\x2', 
		'+', ',', '\a', 'g', '\x2', '\x2', ',', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'-', '.', '\a', 'v', '\x2', '\x2', '.', '/', '\a', '\x63', '\x2', '\x2', 
		'/', '\x30', '\a', 'u', '\x2', '\x2', '\x30', '\x31', '\a', 'm', '\x2', 
		'\x2', '\x31', '\x32', '\a', 'u', '\x2', '\x2', '\x32', '\b', '\x3', '\x2', 
		'\x2', '\x2', '\x33', '\x34', '\a', 'p', '\x2', '\x2', '\x34', '\x35', 
		'\a', '\x63', '\x2', '\x2', '\x35', '\x36', '\a', 'o', '\x2', '\x2', '\x36', 
		'\x37', '\a', 'g', '\x2', '\x2', '\x37', '\n', '\x3', '\x2', '\x2', '\x2', 
		'\x38', '\x39', '\a', '@', '\x2', '\x2', '\x39', '\f', '\x3', '\x2', '\x2', 
		'\x2', ':', '<', '\a', '/', '\x2', '\x2', ';', '=', '\x5', '\x13', '\n', 
		'\x2', '<', ';', '\x3', '\x2', '\x2', '\x2', '<', '=', '\x3', '\x2', '\x2', 
		'\x2', '=', '\xE', '\x3', '\x2', '\x2', '\x2', '>', '?', '\x5', '\x1F', 
		'\x10', '\x2', '?', '\x41', '\x5', '\x1B', '\xE', '\x2', '@', '\x42', 
		'\x5', '\x15', '\v', '\x2', '\x41', '@', '\x3', '\x2', '\x2', '\x2', '\x41', 
		'\x42', '\x3', '\x2', '\x2', '\x2', '\x42', '\x44', '\x3', '\x2', '\x2', 
		'\x2', '\x43', '\x45', '\x5', '\x1B', '\xE', '\x2', '\x44', '\x43', '\x3', 
		'\x2', '\x2', '\x2', '\x44', '\x45', '\x3', '\x2', '\x2', '\x2', '\x45', 
		'S', '\x3', '\x2', '\x2', '\x2', '\x46', 'G', '\x5', '\x1F', '\x10', '\x2', 
		'G', 'I', '\x5', '\x1B', '\xE', '\x2', 'H', 'J', '\x5', '\x15', '\v', 
		'\x2', 'I', 'H', '\x3', '\x2', '\x2', '\x2', 'I', 'J', '\x3', '\x2', '\x2', 
		'\x2', 'J', 'L', '\x3', '\x2', '\x2', '\x2', 'K', 'M', '\x5', '\x1B', 
		'\xE', '\x2', 'L', 'K', '\x3', '\x2', '\x2', '\x2', 'L', 'M', '\x3', '\x2', 
		'\x2', '\x2', 'M', 'O', '\x3', '\x2', '\x2', '\x2', 'N', 'P', '\x5', '\x19', 
		'\r', '\x2', 'O', 'N', '\x3', '\x2', '\x2', '\x2', 'O', 'P', '\x3', '\x2', 
		'\x2', '\x2', 'P', 'R', '\x3', '\x2', '\x2', '\x2', 'Q', '\x46', '\x3', 
		'\x2', '\x2', '\x2', 'R', 'U', '\x3', '\x2', '\x2', '\x2', 'S', 'Q', '\x3', 
		'\x2', '\x2', '\x2', 'S', 'T', '\x3', '\x2', '\x2', '\x2', 'T', '\x10', 
		'\x3', '\x2', '\x2', '\x2', 'U', 'S', '\x3', '\x2', '\x2', '\x2', 'V', 
		'X', '\x5', '\x13', '\n', '\x2', 'W', 'V', '\x3', '\x2', '\x2', '\x2', 
		'W', 'X', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\x3', '\x2', '\x2', '\x2', 
		'Y', '[', '\a', '<', '\x2', '\x2', 'Z', '\\', '\x5', '\x13', '\n', '\x2', 
		'[', 'Z', '\x3', '\x2', '\x2', '\x2', '[', '\\', '\x3', '\x2', '\x2', 
		'\x2', '\\', '\x12', '\x3', '\x2', '\x2', '\x2', ']', '_', '\a', '\"', 
		'\x2', '\x2', '^', ']', '\x3', '\x2', '\x2', '\x2', '_', '`', '\x3', '\x2', 
		'\x2', '\x2', '`', '^', '\x3', '\x2', '\x2', '\x2', '`', '\x61', '\x3', 
		'\x2', '\x2', '\x2', '\x61', '\x14', '\x3', '\x2', '\x2', '\x2', '\x62', 
		'\x63', '\a', '\x30', '\x2', '\x2', '\x63', '\x16', '\x3', '\x2', '\x2', 
		'\x2', '\x64', '\x66', '\t', '\x2', '\x2', '\x2', '\x65', '\x64', '\x3', 
		'\x2', '\x2', '\x2', '\x66', 'g', '\x3', '\x2', '\x2', '\x2', 'g', '\x65', 
		'\x3', '\x2', '\x2', '\x2', 'g', 'h', '\x3', '\x2', '\x2', '\x2', 'h', 
		'\x18', '\x3', '\x2', '\x2', '\x2', 'i', 'o', '\x5', '\x1B', '\xE', '\x2', 
		'j', 'k', '\x5', '\x13', '\n', '\x2', 'k', 'l', '\x5', '\x1B', '\xE', 
		'\x2', 'l', 'n', '\x3', '\x2', '\x2', '\x2', 'm', 'j', '\x3', '\x2', '\x2', 
		'\x2', 'n', 'q', '\x3', '\x2', '\x2', '\x2', 'o', 'm', '\x3', '\x2', '\x2', 
		'\x2', 'o', 'p', '\x3', '\x2', '\x2', '\x2', 'p', '\x1A', '\x3', '\x2', 
		'\x2', '\x2', 'q', 'o', '\x3', '\x2', '\x2', '\x2', 'r', 't', '\t', '\x3', 
		'\x2', '\x2', 's', 'r', '\x3', '\x2', '\x2', '\x2', 't', 'u', '\x3', '\x2', 
		'\x2', '\x2', 'u', 's', '\x3', '\x2', '\x2', '\x2', 'u', 'v', '\x3', '\x2', 
		'\x2', '\x2', 'v', 'z', '\x3', '\x2', '\x2', '\x2', 'w', 'y', '\x5', '\x17', 
		'\f', '\x2', 'x', 'w', '\x3', '\x2', '\x2', '\x2', 'y', '|', '\x3', '\x2', 
		'\x2', '\x2', 'z', 'x', '\x3', '\x2', '\x2', '\x2', 'z', '{', '\x3', '\x2', 
		'\x2', '\x2', '{', '~', '\x3', '\x2', '\x2', '\x2', '|', 'z', '\x3', '\x2', 
		'\x2', '\x2', '}', '\x7F', '\x5', '\x13', '\n', '\x2', '~', '}', '\x3', 
		'\x2', '\x2', '\x2', '~', '\x7F', '\x3', '\x2', '\x2', '\x2', '\x7F', 
		'\x1C', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\t', '\x4', '\x2', 
		'\x2', '\x81', '\x82', '\x3', '\x2', '\x2', '\x2', '\x82', '\x83', '\b', 
		'\xF', '\x2', '\x2', '\x83', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x84', 
		'\x85', '\a', '^', '\x2', '\x2', '\x85', ' ', '\x3', '\x2', '\x2', '\x2', 
		'\x12', '\x2', '<', '\x41', '\x44', 'I', 'L', 'O', 'S', 'W', '[', '`', 
		'g', 'o', 'u', 'z', '~', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
